{"ast":null,"code":"import _classCallCheck from \"/Users/anaradzi/Desktop/mohamed/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/anaradzi/Desktop/mohamed/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/anaradzi/Desktop/mohamed/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/anaradzi/Desktop/mohamed/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/anaradzi/Desktop/mohamed/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/anaradzi/Desktop/mohamed/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/anaradzi/Desktop/mohamed/src/blog/blog.js\";\nimport React, { Component } from \"react\";\n\nvar Blog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Blog, _Component);\n\n  function Blog(props) {\n    var _this;\n\n    _classCallCheck(this, Blog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Blog).call(this, props));\n    _this.state = {\n      arrayOfBlogs: [],\n      // property that contains the array\n      isLoading: false,\n      title: \"\",\n      newEntryTitle: \"\",\n      newEntryContent: \"\",\n      editBlogIndex: null\n    }; // bind the edit blog item to the Blog context\n\n    _this.editBlogItemClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.deleteBlogItemClicked.bind(_assertThisInitialized(_assertThisInitialized(_this))); // not working\n    // this.handleClick.bind(this)\n    // this.newBlogContentChanged.bind(this)\n    // this.newBlogTitleChanged.bind(this)\n    // this.renderBlogContent.bind(this)\n\n\n    return _this;\n  }\n\n  _createClass(Blog, [{\n    key: \"deleteBlogItemClicked\",\n    value: function deleteBlogItemClicked(blog) {\n      var currentBlogArray = this.state.arrayOfBlogs;\n      currentBlogArray.pop(); //pop the last blog item;\n      // update and rerender the list\n\n      this.setState({\n        arrayOfBlogs: currentBlogArray\n      });\n    } // not used\n\n  }, {\n    key: \"renderBlogContent\",\n    value: function renderBlogContent(blog) {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.editBlogItemClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"edit\"), React.createElement(\"button\", {\n        onClick: this.editBlogItemClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"delete\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, blog.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, blog.content));\n    } // Create\n\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      // this.setState(state => ({\n      //   isToggleOn: !state.isToggleOn\n      // }));\n      //alert('clicked');\n      //this.setState()\n      // this.setState(prevState => ({\n      //     arrayOfBlogs: [...prevState.arrayOfBlogs, {\n      //         title: this.state.newEntryTitle,\n      //         content: this.state.newEntryContent\n      //     }],\n      //     newEntryTitle: '',\n      //     newEntryContent: ''\n      //   }))\n      // retrieving the previous contents of the array\n      var currentBlogArray = this.state.arrayOfBlogs;\n\n      if (this.state.editBlogIndex == null) {\n        // not editing a blog entry\n        // update the current array of blogs with the new entry\n        currentBlogArray.push({\n          title: this.state.newEntryTitle,\n          content: this.state.newEntryContent\n        });\n      } else {\n        // editing a blog entry\n        // retrieve the blog from the array\n        // update the array with the new blog title and content\n        currentBlogArray[this.state.editBlogIndex] = {\n          title: this.state.newEntryTitle,\n          content: this.state.newEntryContent\n        };\n      } // update and rerender the list\n\n\n      this.setState({\n        arrayOfBlogs: currentBlogArray,\n        editBlogIndex: null,\n        newEntryTitle: '',\n        newEntryContent: ''\n      });\n    }\n  }, {\n    key: \"newBlogTitleChanged\",\n    value: function newBlogTitleChanged(e) {\n      this.setState({\n        newEntryTitle: e.target.value\n      });\n      console.log(\"new blog title: \" + this.state.newEntryTitle);\n    }\n  }, {\n    key: \"newBlogContentChanged\",\n    value: function newBlogContentChanged(e) {\n      this.setState({\n        newEntryContent: e.target.value\n      });\n      console.log(\"new blog content: \" + this.state.newEntryContent);\n    } // called when the edit button of the blog item is clicked\n\n  }, {\n    key: \"editBlogItemClicked\",\n    value: function editBlogItemClicked(blog, index) {\n      // set the blog and it's index in the array that is being processed\n      this.setState({\n        newEntryTitle: blog.title,\n        newEntryContent: blog.content,\n        editBlogIndex: index\n      });\n    } // 1) Update the list to have an edit button\n    // 2) Handle the click of the edit button\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        id: \"myblog\",\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"My Blog \", this.props.name, \" \", this.props.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Here, I will be adding entries to my personal blog. Stay tuned for updates!\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.state.arrayOfBlogs.map(function (blog, index) {\n        return React.createElement(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            _this2.editBlogItemClicked(blog, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, blog.title), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, blog.content));\n      })), React.createElement(\"div\", {\n        className: \"newblog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"New Blog Entry:\"), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Blog Title:\"), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"BlogTitle\",\n        onChange: this.newBlogTitleChanged.bind(this),\n        value: this.state.newEntryTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Blog Content:\"), React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        name: \"BlogContent\",\n        rows: \"4\",\n        cols: \"50\",\n        onChange: this.newBlogContentChanged.bind(this),\n        value: this.state.newEntryContent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: this.handleClick.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Save\"), React.createElement(\"button\", {\n        onClick: this.deleteBlogItemClicked.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Delete Last Item\")));\n    }\n  }]);\n\n  return Blog;\n}(Component);\n\nexport default Blog;","map":{"version":3,"sources":["/Users/anaradzi/Desktop/mohamed/src/blog/blog.js"],"names":["React","Component","Blog","props","state","arrayOfBlogs","isLoading","title","newEntryTitle","newEntryContent","editBlogIndex","editBlogItemClicked","bind","deleteBlogItemClicked","blog","currentBlogArray","pop","setState","content","push","e","target","value","console","log","index","name","map","newBlogTitleChanged","newBlogContentChanged","handleClick"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nclass Blog extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arrayOfBlogs: [\n      \n      ], // property that contains the array\n      isLoading: false,\n      title: \"\",\n      newEntryTitle: \"\",\n      newEntryContent: \"\",\n      editBlogIndex: null\n    };\n\n    // bind the edit blog item to the Blog context\n    this.editBlogItemClicked.bind(this);\n    this.deleteBlogItemClicked.bind(this);\n\n    // not working\n    // this.handleClick.bind(this)\n    // this.newBlogContentChanged.bind(this)\n    // this.newBlogTitleChanged.bind(this)\n    // this.renderBlogContent.bind(this)\n  }\n\n  deleteBlogItemClicked(blog) {\n    let currentBlogArray = this.state.arrayOfBlogs;\n    currentBlogArray.pop();\n\n    //pop the last blog item;\n\n    // update and rerender the list\n    this.setState({\n      arrayOfBlogs: currentBlogArray\n    });\n  }\n\n  // not used\n  renderBlogContent(blog) {\n    return (\n      <li>\n        <button onClick={this.editBlogItemClicked}>edit</button>\n        <button onClick={this.editBlogItemClicked}>delete</button>\n        <h2>{blog.title}</h2>\n        <p>{blog.content}</p>\n      </li>\n    );\n  }\n\n  // Create\n  handleClick() {\n    // this.setState(state => ({\n    //   isToggleOn: !state.isToggleOn\n    // }));\n    //alert('clicked');\n    //this.setState()\n    // this.setState(prevState => ({\n    //     arrayOfBlogs: [...prevState.arrayOfBlogs, {\n    //         title: this.state.newEntryTitle,\n    //         content: this.state.newEntryContent\n    //     }],\n    //     newEntryTitle: '',\n    //     newEntryContent: ''\n    //   }))\n\n    // retrieving the previous contents of the array\n    let currentBlogArray = this.state.arrayOfBlogs;\n\n    if (this.state.editBlogIndex == null) {\n      // not editing a blog entry\n      // update the current array of blogs with the new entry\n      currentBlogArray.push({\n        title: this.state.newEntryTitle,\n        content: this.state.newEntryContent\n      });\n    } else {\n      // editing a blog entry\n      // retrieve the blog from the array\n      // update the array with the new blog title and content\n\n      currentBlogArray[this.state.editBlogIndex] = {\n        title: this.state.newEntryTitle,\n        content: this.state.newEntryContent\n      }\n    }\n\n    // update and rerender the list\n    this.setState({\n      arrayOfBlogs: currentBlogArray,\n      editBlogIndex: null,\n      newEntryTitle: '',\n      newEntryContent: ''\n    });\n  }\n\n  newBlogTitleChanged(e) {\n    this.setState({ newEntryTitle: e.target.value });\n    console.log(\"new blog title: \" + this.state.newEntryTitle);\n  }\n\n  newBlogContentChanged(e) {\n    this.setState({ newEntryContent: e.target.value });\n    console.log(\"new blog content: \" + this.state.newEntryContent);\n  }\n\n  // called when the edit button of the blog item is clicked\n  editBlogItemClicked(blog, index) {\n      // set the blog and it's index in the array that is being processed\n    this.setState({\n      newEntryTitle: blog.title,\n      newEntryContent: blog.content,\n      editBlogIndex: index\n    });\n  }\n\n  // 1) Update the list to have an edit button\n  // 2) Handle the click of the edit button\n\n  render() {\n    return (\n      <div id=\"myblog\" className=\"content\">\n             \n        <h1 className=\"h1\">\n          My Blog {this.props.name} {this.props.title}\n        </h1>\n        <p>\n          Here, I will be adding entries to my personal blog. Stay tuned for updates!\n          \n        </p>\n\n        <ul>\n          {this.state.arrayOfBlogs.map((blog, index) => (\n            <section>\n              <button\n                onClick={() => {\n                  this.editBlogItemClicked(blog, index);\n                }}\n              >\n                Edit\n              </button>\n\n              <h2>{blog.title}</h2>\n              <p>{blog.content}</p>\n            </section>\n          ))}\n        </ul>\n<div className=\"newblog\">\n        <h2>New Blog Entry:</h2>\n\n        <section>Blog Title:</section>\n<section>\n        <input\n          type=\"text\"\n          name=\"BlogTitle\"\n          onChange={this.newBlogTitleChanged.bind(this)}\n          value={this.state.newEntryTitle}\n        />\n        </section>\n\n<section>Blog Content:</section>\n        <section>\n        <textarea\n          name=\"BlogContent\"\n          rows=\"4\"\n          cols=\"50\"\n          onChange={this.newBlogContentChanged.bind(this)}\n          value={this.state.newEntryContent}\n        />\n</section>\n\n\n        \n        <button onClick={this.handleClick.bind(this)}>Save</button>\n        <button onClick={this.deleteBlogItemClicked.bind(this)}>\n          Delete Last Item\n        </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Blog;\n"]},"metadata":{},"sourceType":"module"}